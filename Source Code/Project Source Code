#include <SoftwareSerial.h>
#include<LiquidCrystal.h>
#include <TinyGPS.h>

LiquidCrystal lcd(0,1,8,9,10,11);
const int pingPin=3;
int trigger_pin = 3;
int echo_pin = 4;
int buzzer_pin = 5; 
int time;
long duration;
int predef; //pre defined magnitude of speed, which a vehicle could manage to break with ease
float distance1,distance2; 
float caution1,caution2,caution3; //caution for informing required condition as per our algorithm
     //here the caution defines respective speed which is (SPEED=DISTANCE/TIME)
int distanceCm,distanceInch;
int state = 0;
const int pin = 5;
float gpslat, gpslon;
TinyGPS gps;
SoftwareSerial sgps(11, 12);   //ports
SoftwareSerial sgsm(9, 10);  

void setup ( ) {
        Serial.begin (9600); 
        pinMode (trigger_pin, OUTPUT); 
        pinMode (echo_pin, INPUT);
        pinMode (buzzer_pin, OUTPUT);
        sgsm.begin(9600);
      Serial.begin(9600);
      sgps.begin(9600);
      delay(100);

}

void loop ( ) {
   italWrite (trigger_pin, HIGH);
    delayMicroseconds (10);
    digitalWrite (trigger_pin, LOW);
    time = pulseIn (echo_pin, HIGH);
    distance1 = (time * 0.034) / 2; 
    Serial.println("Distance = ");
    Serial.println(distance);
    delay(1000)
    digitalWrite (trigger_pin, HIGH);
    delayMicroseconds (10);
    digitalWrite (trigger_pin, LOW);
    time = pulseIn (echo_pin, HIGH);
    distance2 = (time * 0.034) / 2; 
    Serial.println("Distance = ");
    Serial.println(distance);
    delay(1000)
    digitalWrite (trigger_pin, HIGH);
    delayMicroseconds (10);
    digitalWrite (trigger_pin, LOW);
    time = pulseIn (echo_pin, HIGH);
    distance3 = (time * 0.034) / 2; 
    Serial.println("Distance = ");
    Serial.println(distance);
    delay(1000)
    digitalWrite (trigger_pin, HIGH);
    delayMicroseconds (10);
    digitalWrite (trigger_pin, LOW);
    time = pulseIn (echo_pin, HIGH);
    distance4 = (time * 0.034) / 2; 
    Serial.println("Distance = ");
    Serial.println(distance);
    delay(1000)
    caution1=distance2-distance1;
    caution2=distance3-distance2;
    caution1=distance4-distance3;
    if (caution1<predef && caution2<predef && caution3<predef ) 
        {     
        digitalWrite (buzzer_pin, HIGH);
        delay (2000);
        }
    else {
        digitalWrite (buzzer_pin, LOW);
        delay (2000);        
  } 
  sgps.listen();
  while (sgps.available())
  {
    int c = sgps.read();
    if (gps.encode(c))
    {
      gps.f_get_position(&gpslat, &gpslon);
    }
  }
    if (Serial.available()>0) {
      switch('s')
      {
      case 's':
      sgsm.listen();
      sgsm.print("\r");
      delay(1000);
      sgsm.println("AT+CMGF=1");
      delay(1000);
      sgsm.println("AT+CMGS=\"+916382389xxx\"\r");
      delay(1000);
      sgsm.println("Emergency!!! The vehicle with vehicle number xxxx met with an accident");
      sgsm.println("The location of the accident is as follows");
      sgsm.print("Latitude :");
      sgsm.println(gpslat, 6);
      sgsm.print("Longitude:");
      sgsm.println(gpslon, 6);
      sgsm.println("AT+CMGS=\"+91101\"\r");
      sgsm.println("Emergency!!! The vehicle with vehicle number xxxx met with an accident. Please send the necessary ambulance support to the following location ASAP");
      sgsm.print("Latitude :");
      sgsm.println(gpslat, 6);
      sgsm.print("Longitude:");
      sgsm.println(gpslon, 6);
      delay(1000);
      sgsm.println((char)26);
      delay(10000);
      break
 
      case 'r':
        sgsm.println("AT+CNMI=2,2,0,0,0");
        delay(1000);
        break;

  }
  if (sgsm.available()>0) {
      Serial.weite(mySerial.read());
    }

}



